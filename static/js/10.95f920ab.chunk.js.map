{"version":3,"sources":["components/FrontText.tsx","pages/default-box/DefaultBox.tsx"],"names":["StyledText","styled","h1","FrontText","props","title","CanvasStyle","div","Box","mesh","useRef","useState","active","setActive","useFrame","current","rotation","x","y","ref","position","scale","onClick","e","attach","args","Scene","Fragment","DefaultBox"],"mappings":"uWAGA,IAAMA,E,MAAaC,EAAOC,GAAV,KAmBDC,IAN6B,SAACC,GACzC,OACI,kBAACJ,EAAD,KAAaI,EAAMC,S,oQCb3B,IAAMC,EAAcL,IAAOM,IAAV,KAWXC,EAA0B,SAACJ,GAC7B,IAAMK,EAAOC,mBAD0B,EAEXC,oBAAS,GAFE,mBAEhCC,EAFgC,KAExBC,EAFwB,KAWvC,OAPAC,aAAS,WACDL,EAAKM,UACLN,EAAKM,QAAQC,SAASC,GAAK,KAC3BR,EAAKM,QAAQC,SAASE,GAAK,QAK/B,0BACIC,IAAKV,EACLW,SAAUhB,EAAMgB,SAChBC,MAAOT,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCU,QAAS,SAAAC,GAAC,OAAIV,GAAWD,KAEzB,uCAAmBY,OAAO,WAAWC,KAAM,CAAC,EAAG,EAAG,KAClD,wCAAoBD,OAAO,eAKjCE,EAAQ,WACV,OACI,kBAAC,IAAMC,SAAP,KACI,uCACA,kBAACnB,EAAD,CAAKY,SAAU,CAAC,EAAG,EAAG,OAkBnBQ,UAbI,WACf,OACI,kBAAC,IAAMD,SAAP,KACI,kBAAC,IAAD,CAAWtB,MAAM,gBACjB,kBAACC,EAAD,KACI,kBAAC,IAAD,KACI,kBAACoB,EAAD","file":"static/js/10.95f920ab.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledText = styled.h1`\n    color: white;\n    position: absolute;\n    top: 2%;\n    left: 5%;\n    z-index: 100;\n    font-family: Sans-Serif;\n`;\n\ninterface FrontTextProps {\n    title: string\n}\n\nconst FrontText: React.FC<FrontTextProps> = (props) => {\n    return (\n        <StyledText>{props.title}</StyledText>\n    )\n};\n\nexport default FrontText;","import React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport styled from 'styled-components';\nimport FrontText from '../../components/FrontText';\n\nconst CanvasStyle = styled.div`\n    width: 100vw;\n    height: 100vh;\n    z-index: -100;\n    background-color: $black;\n`;\n\ninterface BoxProps {\n    position: [number, number, number];\n}\n\nconst Box: React.FC<BoxProps> = (props) => {\n    const mesh = useRef<THREE.Mesh>();\n    const [active, setActive] = useState(false);\n\n    useFrame(() => {\n        if (mesh.current) {\n            mesh.current.rotation.x += 0.005\n            mesh.current.rotation.y += 0.01\n        }\n    })\n\n    return (\n        <mesh\n            ref={mesh}\n            position={props.position}\n            scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n            onClick={e => setActive(!active)}\n        >\n            <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n            <meshNormalMaterial attach=\"material\" />\n        </mesh>\n    )\n}\n\nconst Scene = () => {\n    return (\n        <React.Fragment>\n            <ambientLight />\n            <Box position={[0, 0, 0]} />\n        </React.Fragment>\n    )\n}\n\nconst DefaultBox = () => {\n    return (\n        <React.Fragment>\n            <FrontText title=\"Default Box\" />\n            <CanvasStyle>\n                <Canvas>\n                    <Scene />\n                </Canvas>\n            </CanvasStyle>\n        </React.Fragment>\n    )\n}\n\nexport default DefaultBox;\n"],"sourceRoot":""}